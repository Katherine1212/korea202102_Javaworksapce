어제 배운 것 정리
1. 은닉화, 캡슐화(=encapsulation)
데이터는 보호하고 이 데이터를 제어 할 수 있는 메소드를 통해 객체를 이용할 수 있도록 클래스를 정의하는 기법.
코드로 구현하면 속성은 private 제한하고 이 속성에 대한 setter/getter로 접근.

2. 생성자
2-1) 디폴트 생성자: 컴파일러에 의해 기본적으로 정의되는 기본 생성자.
		왜 지원? 해당 클래스로부터 인스턴스를 생성시 new연산자 뒤에는 무조건적으로 생성자 호출이 일어나므로.
			   만일, 개발자가 생성자를 따로 정의하지 않을 경우, 존재하지 않는 생성자 호출이 되므로 컴파일에러
			   발생. 따라서 sun사에서 보이지 않는 기본형 생성자를 자동으로 지원 해 줌.
			   단, 이 디폴트 생성자는 '개발자가 생성자 정의를 하지 않았을 때만' 최소한의 관여.
* 생성자도 메소드이기때문에 오버로딩 또한 지원이 된다.

3. 메소드 오버로딩(overroding)
    하나의 클래스 내에 동일한 메소드 명을 여러개 둘 수 있는 메소드 정의 기법.
    일반적인 프로그래밍 언어의 원칙상 메소드 명은 중복이 될 수 없다. 
    하지만 메소드간 코드 차이가 별로 없는 경우 
    각각 다 메소드 명을 다르게 줘야한다면 개발의 효율성이 떨어지기때문에 오버로딩을 이용.
3-1) 오버로딩으로 인정되는 경우
       완전 동일하면 안되며, 매개변수로 차별화를 두어애 함.
       1) 매개변수의 개수가 달라야 함.
       2) 매개변수의 자료형이 달라야 함.