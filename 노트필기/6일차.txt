[개발 환경 구축]
1. 자바로 개발 할 수 있는 플랫폼
	1) JavaSE(모든 플랫폼에 공통적으로 사용) = 독립 실행형 응용프로그램
	2) JavaEE(대형, 기업용 어플리케이션) - 웹어플리케이션
	3) JavaME(기계, 장치용) - 임베디드 어플리케이션, 스마트폰 개발도 가능하지만 android가 대세
2. class path
	자바는 플랫폼에 중립적이기에 클래스파일 경로는 classpath라는 시스템변수를 이용.
3. Write Once Run Anywhere! 이라는 슬로건을 실행 할 수 있는 기술
	- jvm(자바 가상머신)

[기본 문법]
1. 기본자료형
	문자(char): 음수는 미포함. 문자코드를 담아야하므로 사실상 숫자다.
	숫자 - 실수: float(4), double(8)
	      - 정수: byte(1), short(2), int(4), long(8)
	논리값(boolean): 타 언어랑은 다르게 true를 1로 대체 할 수 없다.
2. 자료형간 형 변환.
	1) 문자와 숫자간에만 가능함. 논리값인 boolean은 제외.
	- promotion: 작은 자료형이 큰 자료형으로 변경
	- demotion: 큰 자료형이 작은 자료형으로 변경.(데이터 유실 가능성 존재)
	2. cast연산자 ( ) : 손실을 감안 하더라도 원하는 자료형으로 강제 형변환. 
	3) int형을 연산 시 기본 자료형으로 지정(가장 최적의 성능)

[class]
1. jvm의 메모리 구조
	static: 클래스의 원본 코드, 메소드
	stack: 모든 지역변수(메소드의 지역변수)
	heap: 인스턴스, constant pool등
2. 용어
	instance: 클래스로부터 메모리 heap영역에 생성된 객체를 가리키는 말.
	클래스 변수, 메소드: static 수정자가 붙은 변수와 메소드. 
				인스턴스에 딸려 올라가지 않고 클래스 원본에 소속되므로 접근 시 
				class명.변수, class명.메소드 로 접근.
	garbage collection: 개발자가 생성 해 놓은 heap영역의 인스턴스는 jvm의 인스턴스 청소 담당자에
				     의해 소명되며 개발자가 직접 소멸시키지 못한다.
				     메모리 관리를 안정적으로 처리하기 위해 시스템이 담당.
3. 인스턴스 초기화 블럭, static 초기화 블럭
4. 메소드
	1) settet/getter: 은닉화(encapsulation)과 연관. 
				class 작성 시 변수는 보호, 보호된 변수 접근을 개발자가 제공해 주는 
				메소드를 통해 제어 할 수 있는 클래스 정의 기법.
		1-1)관례: set단어, get단어: 단어의 첫 철자는 대문자로.(eclips 쓰면 자동)
	2) overloading: 하나의 클래스 내 메소드명을 동일하게 정의 할 수 있는 정의.
			      완벽하게 동일하면 안 되고 메소드의 매개변수의 개수와 자료형을 다르게 해야함.
		2-1)지원한 이유는? 직관성을 힘들게 부여해 만든 변수명을 로직이 크게 다르지 않은
			      경우라면 계속 새롭게 만들다보면 직관성이 떨어질 수 있으므로 오버로딩을 지원.
	3) 생성자: 생성자에 반환형을 둘 경우 일반 메소드화 되어 인스턴스 생성 능력을 상실.
		    생성자도 메소드이기때문에 오버로딩 지원.
		3-1) default생성자: 개발자가 생성자를 정의하지 않으면 컴파일러에 의해 
					   기본 생성자가 제공. 디폴트 생성자에는 눈에 보이지 않지만 super()가 생략.
	4) 상속
		4-1) 사용 목적
			- 클래스의 재사용
			- 비슷한 자료형을 정의.(상속관계의 자료형간에는 같은 자료형이 됨)
			- 구현 시 extends 키워드 사용(= is a )
		4-2) overriding
			부모의 메소드가 현재 개발시점에는 현 상황에 적절하지 않은 경우 부모메소드를
			업그레이드 가능. 즉, 부모의 메소드를 재정의하는 메소드 기법.
		4-3) 다형성(polymorphism)
			특정 자료형이 어느때는 부모역할, 자식 역할을 함.
			ig) Bird b= new Duck(); 
			     오리가 fly()를 오버라이드 하는 경우 업데이트 한 오리의 것으로 호출
	5) package와 import
		5-1) package: 클래스명 중복 방지. 관련성 있는 클래스들끼리 묶기 위함.
		5-2) import: 현재 클래스와는 다른 경로에 있는 클래스의 위치를 명시하기 위함.
		package 와 import는 루트 경로를 개발자가 등록한 classpath를 기준.
	6) 자바 보안 처리
		public < protected < default < private
	7) 타인이 만든 class를 제공 받는 경우 원본이 없기 때문에 해당 클래스의 변수와 메소드를 알 수 없다.
	    남이 만든 파일의 변수와 메소드 명을 알기 위해서는 api document를 제공 받아야함.
	    javadoc.exe를 이용하여 index.html에 접근 할 수 있다.